%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% @date        : Sat Mar 21 10:25:43 CET 2020
% @author(s)   : Francesco Urbani
% @file        : 1-stage_LC_matching.m
% @descritpion : Matlab calculations for 1 stage LC matching networks
%                Step-down (shunt-series) and step-up (series-shunt) conversions.
%                
%                RF Electronics class, Spring 2020
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


syms R1 real   % Ω  
syms X1 real   % Ω 

syms R2 real   % Ω 
syms X2 real   % Ω 

syms Xshu real   % Ω 
syms Xser1 real   % Ω 
syms Xser2 real   % Ω 




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



clc
clear

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%  series - shunt - series %%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



Z2 = j*Xser2 + 1/(1/(j*Xshu) + 1/(R1+j*(Xser1+X1)))

pretty(Z2)
%                          1
% Xser2 1i + ----------------------------
%                      1              1i
%            --------------------- - ----
%            R1 + X1 1i + Xser1 1i   Xshu



eq1 = real(Z2) == R2
eq2 = imag(Z2) == X2


S=solve(eq1,eq2, Xshu ,Xser1, Xser2)

S.Xshu
%                                            (-R1*R2*(- R2^2 + R1*R2))^(1/2)/(R1 - R2)
%                                                                                    0
%                              (R1*X2 - (R1*R2*(R2^2 - R1*R2 + X2^2))^(1/2))/(R1 - R2)
%   (R1*X2 + (R2^2*((X2 + 1)^2 - 2*X2*(X2 + 1) + X2^2))^(1/2) - R1*(X2 + 1))/(R1 - R2)
%                              (R1*X2 + (R1*R2*(R2^2 - R1*R2 + X2^2))^(1/2))/(R1 - R2)
%                                           -(-R1*R2*(- R2^2 + R1*R2))^(1/2)/(R1 - R2)
%                                  (R2*X1 - R2*(X1 - (-R1*(R1 - R2))^(1/2)))/(R1 - R2)
%                                  (R2*X1 - R2*(X1 + (-R1*(R1 - R2))^(1/2)))/(R1 - R2)
%  -((R2^2*((X2 + 1)^2 - 2*X2*(X2 + 1) + X2^2))^(1/2) - R1*X2 + R1*(X2 + 1))/(R1 - R2)
%                                    (R2*X1 - R2*(X1 - (R2^2 - R1^2)^(1/2)))/(R1 - R2)
%                                    (R2*X1 - R2*(X1 + (R2^2 - R1^2)^(1/2)))/(R1 - R2)
pretty(S.Xshu)
% /             #2             \
% |                            |
% |              0             |
% |                            |
% |         R1 X2 - #3         |
% |         ----------         |
% |           R1 - R2          |
% |                            |
% |  R1 X2 + #1 - R1 (X2 + 1)  |
% |  ------------------------  |
% |           R1 - R2          |
% |                            |
% |         R1 X2 + #3         |
% |         ----------         |
% |           R1 - R2          |
% |                            |
% |             -#2            |
% |                            |
% |    R2 X1 - R2 (X1 - #5)    |
% |    --------------------    |
% |           R1 - R2          |
% |                            |
% |    R2 X1 - R2 (X1 + #5)    |
% |    --------------------    |
% |           R1 - R2          |
% |                            |
% |   #1 - R1 X2 + R1 (X2 + 1) |
% | - ------------------------ |
% |            R1 - R2         |
% |                            |
% |    R2 X1 - R2 (X1 - #4)    |
% |    --------------------    |
% |           R1 - R2          |
% |                            |
% |    R2 X1 - R2 (X1 + #4)    |
% |    --------------------    |
% \           R1 - R2          /

% where

%                 2          2                     2
%    #1 == sqrt(R2  ((X2 + 1)  - 2 X2 (X2 + 1) + X2 ))

%                           2
%          sqrt(-R1 R2 (- R2  + R1 R2))
%    #2 == ----------------------------
%                     R1 - R2

%                        2             2
%    #3 == sqrt(R1 R2 (R2  - R1 R2 + X2 ))

%                 2     2
%    #4 == sqrt(R2  - R1 )

%    #5 == sqrt(-R1 (R1 - R2))

   

S.Xser1
%                   -(R2*X1 - (-R1*R2*(- R2^2 + R1*R2))^(1/2))/R2
%                                                             -X1
%               -(R2*X1 + (R1*R2*(R2^2 - R1*R2 + X2^2))^(1/2))/R2
%  -(R2*X1 - (R2^2*((X2 + 1)^2 - 2*X2*(X2 + 1) + X2^2))^(1/2))/R2
%               -(R2*X1 - (R1*R2*(R2^2 - R1*R2 + X2^2))^(1/2))/R2
%                   -(R2*X1 + (-R1*R2*(- R2^2 + R1*R2))^(1/2))/R2
%                                      (-R1*(R1 - R2))^(1/2) - X1
%                                    - X1 - (-R1*(R1 - R2))^(1/2)
%  -(R2*X1 + (R2^2*((X2 + 1)^2 - 2*X2*(X2 + 1) + X2^2))^(1/2))/R2
%                                        (R2^2 - R1^2)^(1/2) - X1
%                                      - X1 - (R2^2 - R1^2)^(1/2)

pretty(Xser1)                                     
% /   R2 X1 - #3 \
% | - ---------- |
% |       R2     |
% |              |
% |      -X1     |
% |              |
% |   R2 X1 + #2 |
% | - ---------- |
% |       R2     |
% |              |
% |   R2 X1 - #1 |
% | - ---------- |
% |       R2     |
% |              |
% |   R2 X1 - #2 |
% | - ---------- |
% |       R2     |
% |              |
% |   R2 X1 + #3 |
% | - ---------- |
% |       R2     |
% |              |
% |    #5 - X1   |
% |              |
% |   - X1 - #5  |
% |              |
% |   R2 X1 + #1 |
% | - ---------- |
% |       R2     |
% |              |
% |    #4 - X1   |
% |              |
% \   - X1 - #4  /

% where

%                 2          2                     2
%    #1 == sqrt(R2  ((X2 + 1)  - 2 X2 (X2 + 1) + X2 ))

%                        2             2
%    #2 == sqrt(R1 R2 (R2  - R1 R2 + X2 ))

%                           2
%    #3 == sqrt(-R1 R2 (- R2  + R1 R2))

%                 2     2
%    #4 == sqrt(R2  - R1 )

%    #5 == sqrt(-R1 (R1 - R2))
 


S.Xser2
 %     X2
 %     X2
 %      0
 % X2 + 1
 %      0
 %     X2
 %     X2
 %     X2
 % X2 + 1
 %     X2
 %     X2

pretty(S.Xser2)
% /   X2   \
% |        |
% |   X2   |
% |        |
% |    0   |
% |        |
% | X2 + 1 |
% |        |
% |    0   |
% |        |
% |   X2   |
% |        |
% |   X2   |
% |        |
% |   X2   |
% |        |
% | X2 + 1 |
% |        |
% |   X2   |
% |        |
% \   X2   /




